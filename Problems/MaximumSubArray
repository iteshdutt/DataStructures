func maxSubArray(_ nums: [Int]) -> Int {
  var sum: Int = 0
  var maximumSum = 0
  for i in stride(from: 0, to: nums.count, by: 1) {
    sum = nums[i]
    for j in stride(from: 0, to: nums.count, by: 1) {
      sum += nums[j]
      if sum > maximumSum {
        maximumSum = sum
      }
    }
  }
  return maximumSum
}

func maxSubArray2(_ nums: [Int]) -> Int {
  var currentSubArray: Int = 0
  var maximumSum = 0
  for i in stride(from: 0, to: nums.count, by: 1) {
    currentSubArray += nums[i]
    if currentSubArray > maximumSum {
        maximumSum = currentSubArray
    }
    if currentSubArray < 0 {
      currentSubArray = 0
    }
  }
  return maximumSum
}

let sum = maxSubArray2([-2,1,-3,4,-1,2,1,-5,4])
print(sum)


//Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
// Output: 6
// Explanation: [4,-1,2,1] has the largest sum = 6.
